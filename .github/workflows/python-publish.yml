name: Python Publish

on:
  push:
    paths:
      - "vlmrun/version.py"
    branches:
      - main

env:
  CACHE_NUMBER: 1 # increase to reset cache manually

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: dev
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements/requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('MANIFEST.in') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            pip-
          id: cache

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[test]'

      - name: Quality Check
        uses: pre-commit/action@v3.0.1
        continue-on-error: true

      - name: Run tests
        env:
          VLMRUN_BASE_URL: ${{ vars.VLMRUN_BASE_URL }}
          VLMRUN_API_KEY: ${{ secrets.VLMRUN_API_KEY }}
        run: |
          make test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: prod
    needs: test
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements/requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('MANIFEST.in') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            pip-
          id: cache

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[test,build]'

      - name: Bump version
        if: success()
        run: |
          version=$(grep -oP '__version__ = "\K[^"]+' vlmrun/version.py)
          echo "Current version: ${version}"

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git tag -a "v${version}" -m "Version ${version}"
          git push origin main
          git push origin "v${version}"

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
